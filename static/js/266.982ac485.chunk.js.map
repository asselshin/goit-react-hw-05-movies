{"version":3,"file":"static/js/266.982ac485.chunk.js","mappings":"oKA6BA,IA1BA,YAAiC,IAAXA,EAAU,EAAVA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFFL,EAAME,GAMlB,KAGN,C,uNCjBKI,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAClB,IAAMC,EAAW,sCAEXC,EAAW,mCAAG,WAAMC,GAAN,uFACFH,EAAAA,EAAAA,IAAA,sBAAiC,CACtDI,OAAQ,CACNC,SAAU,QACVC,QAASP,GAEXQ,OAAQJ,IANe,cACnBK,EADmB,yBAQlBA,EAASC,MARS,2CAAH,sDAWXC,EAAgB,mCAAG,WAAOC,EAAWR,GAAlB,uFACPH,EAAAA,EAAAA,IAAA,gBAA2B,CAChDI,OAAQ,CACNQ,MAAOD,EACPL,QAASP,GAEXQ,OAAQJ,IANoB,cACxBK,EADwB,yBAQvBA,EAASC,MARc,2CAAH,wDAWhBI,EAAiB,mCAAG,WAAOC,EAAP,mFAAkBX,EAAlB,EAAkBA,iBAAlB,SACRH,EAAAA,EAAAA,IAAA,iBAAoBc,GAAW,CACpDV,OAAQ,CACNC,SAAU,QACVC,QAASP,GAEXQ,OAAQJ,IANqB,cACzBK,EADyB,yBASxBA,EAASC,MATe,2CAAH,wDAYjBM,EAAiB,mCAAG,WAAOD,EAAP,mFAAkBX,EAAlB,EAAkBA,iBAAlB,SACRH,EAAAA,EAAAA,IAAA,iBAAoBc,EAApB,YAAuC,CAC5DV,OAAQ,CACNC,SAAU,QACVC,QAASP,GAEXQ,OAAQJ,IANqB,cACzBK,EADyB,yBAQxBA,EAASC,MARe,2CAAH,wDAWjBO,EAAiB,mCAAG,WAAOF,EAAP,mFAAkBX,EAAlB,EAAkBA,iBAAlB,SACRH,EAAAA,EAAAA,IAAA,iBAAoBc,EAApB,YAAuC,CAC5DV,OAAQ,CACNC,SAAU,QACVC,QAASP,GAEXQ,OAAQJ,IANqB,cACzBK,EADyB,yBAQxBA,EAASC,MARe,2CAAH,uD,yGCb9B,UAlCa,WACX,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAO5B,EAAP,KAAe6B,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,IAAnC,eAAOI,EAAP,KAAcC,EAAd,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBADT,wCAGd,oGAEIH,EAAS,IACTF,GAAW,GAHf,UAIgClB,EAAAA,EAAAA,IAAYsB,EAAWjB,QAJvD,OAIUmB,EAJV,OAKIR,EAAUQ,EAAcC,SAL5B,gDAOIL,EAAS,EAAD,IAPZ,yBASIF,GAAW,GATf,6EAHc,sBAgBd,OAhBc,mCAedQ,GACO,kBAAMJ,EAAWK,OAAjB,CACR,GAAE,KAGD,6BACE,wBAAI,mBACHV,IAAW,uBAAG,4BACd9B,EAAOyC,OAAS,IAAK,SAAC,IAAD,CAAYzC,OAAQA,IAC/B,KAAVgC,IAAgB,uBAAG,yCAGzB,C","sources":["components/MoviesList.js","movie-api.js","pages/Home.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nfunction MoviesList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(movie => {\n        return (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n    })\n  ),\n};\nexport default MoviesList;\n","import axios from 'axios';\n\nconst API_KEY = 'be88e8b6abee602da2d38b01a63dd167';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport const imageURL = 'https://image.tmdb.org/t/p/original';\n\nexport const fetchMovies = async controllerSignal => {\n  const responce = await axios.get(`/trending/movie/day`, {\n    params: {\n      language: 'en-US',\n      api_key: API_KEY,\n    },\n    signal: controllerSignal,\n  });\n  return responce.data;\n};\n\nexport const fetchSearchMovie = async (movieName, controllerSignal) => {\n  const responce = await axios.get(`/search/movie`, {\n    params: {\n      query: movieName,\n      api_key: API_KEY,\n    },\n    signal: controllerSignal,\n  });\n  return responce.data;\n};\n\nexport const fetchMovieDetails = async (movieId, { controllerSignal }) => {\n  const responce = await axios.get(`/movie/${movieId}`, {\n    params: {\n      language: 'en-US',\n      api_key: API_KEY,\n    },\n    signal: controllerSignal,\n  });\n\n  return responce.data;\n};\n\nexport const fetchMovieReviews = async (movieId, { controllerSignal }) => {\n  const responce = await axios.get(`/movie/${movieId}/reviews`, {\n    params: {\n      language: 'en-US',\n      api_key: API_KEY,\n    },\n    signal: controllerSignal,\n  });\n  return responce.data;\n};\n\nexport const fetchMovieCredits = async (movieId, { controllerSignal }) => {\n  const responce = await axios.get(`/movie/${movieId}/credits`, {\n    params: {\n      language: 'en-US',\n      api_key: API_KEY,\n    },\n    signal: controllerSignal,\n  });\n  return responce.data;\n};\n","import MoviesList from 'components/MoviesList';\nimport { fetchMovies } from 'movie-api';\nimport { useState, useEffect } from 'react';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    async function getMovies() {\n      try {\n        setError('');\n        setLoading(true);\n        const fetchedMovies = await fetchMovies(controller.signal);\n        setMovies(fetchedMovies.results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMovies();\n    return () => controller.abort();\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      {loading && <b>Loading, please wait...</b>}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n      {error !== '' && <b>Something went wrong! Try again...</b>}\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["movies","location","useLocation","map","movie","to","id","state","from","title","API_KEY","axios","imageURL","fetchMovies","controllerSignal","params","language","api_key","signal","responce","data","fetchSearchMovie","movieName","query","fetchMovieDetails","movieId","fetchMovieReviews","fetchMovieCredits","useState","setMovies","loading","setLoading","error","setError","useEffect","controller","AbortController","fetchedMovies","results","getMovies","abort","length"],"sourceRoot":""}