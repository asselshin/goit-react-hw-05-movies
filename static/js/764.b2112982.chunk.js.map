{"version":3,"file":"static/js/764.b2112982.chunk.js","mappings":"oKA8BA,IA3BA,YAAiC,IAAXA,EAAU,EAAVA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GACV,IAAQC,EAAcD,EAAdC,GAAIC,EAAUF,EAAVE,MACZ,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMR,GAA1C,SACGK,KAFID,EAMZ,KAGN,C,uNClBKK,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAClB,IAAMC,EAAW,kCAEXC,EAAW,mCAAG,WAAMC,GAAN,uFACFH,EAAAA,EAAAA,IAAA,sBAAiC,CACtDI,OAAQ,CACNC,SAAU,QACVC,QAASP,GAEXQ,OAAQJ,IANe,cACnBK,EADmB,yBAQlBA,EAASC,MARS,2CAAH,sDAWXC,EAAgB,mCAAG,WAAOC,EAAWR,GAAlB,uFACPH,EAAAA,EAAAA,IAAA,gBAA2B,CAChDI,OAAQ,CACNQ,MAAOD,EACPL,QAASP,GAEXQ,OAAQJ,IANoB,cACxBK,EADwB,yBAQvBA,EAASC,MARc,2CAAH,wDAWhBI,EAAiB,mCAAG,WAAOC,EAAP,mFAAkBX,EAAlB,EAAkBA,iBAAlB,SACRH,EAAAA,EAAAA,IAAA,iBAAoBc,GAAW,CACpDV,OAAQ,CACNC,SAAU,QACVC,QAASP,GAEXQ,OAAQJ,IANqB,cACzBK,EADyB,yBASxBA,EAASC,MATe,2CAAH,wDAYjBM,EAAiB,mCAAG,WAAOD,EAAP,mFAAkBX,EAAlB,EAAkBA,iBAAlB,SACRH,EAAAA,EAAAA,IAAA,iBAAoBc,EAApB,YAAuC,CAC5DV,OAAQ,CACNC,SAAU,QACVC,QAASP,GAEXQ,OAAQJ,IANqB,cACzBK,EADyB,yBAQxBA,EAASC,MARe,2CAAH,wDAWjBO,EAAiB,mCAAG,WAAOF,EAAP,mFAAkBX,EAAlB,EAAkBA,iBAAlB,SACRH,EAAAA,EAAAA,IAAA,iBAAoBc,EAApB,YAAuC,CAC5DV,OAAQ,CACNC,SAAU,QACVC,QAASP,GAEXQ,OAAQJ,IANqB,cACzBK,EADyB,yBAQxBA,EAASC,MARe,2CAAH,uD,iHCP9B,UAvCe,WACb,OAA4CQ,EAAAA,EAAAA,UAAS,MAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAgBF,EAAaG,IAAI,UAEvCC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACvB,GAAsB,KAAlBJ,EAWJ,OAbc,mCAWdK,GAEO,kBAAMF,EAAWG,OAAjB,EAbO,wCAId,qGAC+BnB,EAAAA,EAAAA,IAC3Ba,EACAG,EAAWnB,QAHf,OACQW,EADR,OAKEC,EAAkBD,EAAeY,SALnC,2CAJc,wBAcf,GAAE,CAACP,IASJ,OACE,iCACE,kBAAMQ,QATW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfb,EAAgB,CAAEV,MAAOsB,EAAKE,SAASC,WAAWC,MAAMC,SACxDL,EAAKM,OACN,EAIG,WACE,kBAAOC,KAAK,OAAOC,KAAK,gBACxB,mBAAQD,KAAK,SAAb,SAAsB,cAEJ,OAAnBvB,IAA2B,SAAC,IAAD,CAAY7B,OAAQ6B,MAGrD,C","sources":["components/MoviesList.js","movie-api.js","pages/Movies.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nfunction MoviesList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(movie => {\n        const { id, title } = movie;\n        return (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n    })\n  ),\n};\nexport default MoviesList;\n","import axios from 'axios';\n\nconst API_KEY = 'be88e8b6abee602da2d38b01a63dd167';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport const imageURL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchMovies = async controllerSignal => {\n  const responce = await axios.get(`/trending/movie/day`, {\n    params: {\n      language: 'en-US',\n      api_key: API_KEY,\n    },\n    signal: controllerSignal,\n  });\n  return responce.data;\n};\n\nexport const fetchSearchMovie = async (movieName, controllerSignal) => {\n  const responce = await axios.get(`/search/movie`, {\n    params: {\n      query: movieName,\n      api_key: API_KEY,\n    },\n    signal: controllerSignal,\n  });\n  return responce.data;\n};\n\nexport const fetchMovieDetails = async (movieId, { controllerSignal }) => {\n  const responce = await axios.get(`/movie/${movieId}`, {\n    params: {\n      language: 'en-US',\n      api_key: API_KEY,\n    },\n    signal: controllerSignal,\n  });\n\n  return responce.data;\n};\n\nexport const fetchMovieReviews = async (movieId, { controllerSignal }) => {\n  const responce = await axios.get(`/movie/${movieId}/reviews`, {\n    params: {\n      language: 'en-US',\n      api_key: API_KEY,\n    },\n    signal: controllerSignal,\n  });\n  return responce.data;\n};\n\nexport const fetchMovieCredits = async (movieId, { controllerSignal }) => {\n  const responce = await axios.get(`/movie/${movieId}/credits`, {\n    params: {\n      language: 'en-US',\n      api_key: API_KEY,\n    },\n    signal: controllerSignal,\n  });\n  return responce.data;\n};\n","import MoviesList from 'components/MoviesList';\nimport { fetchSearchMovie } from 'movie-api';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchedMovies, setSearchedMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchedQuery = searchParams.get('query');\n\n  useEffect(() => {\n    const controller = new AbortController();\n    if (searchedQuery === '') return;\n\n    async function searchMovie() {\n      const searchedMovies = await fetchSearchMovie(\n        searchedQuery,\n        controller.signal\n      );\n      setSearchedMovies(searchedMovies.results);\n    }\n    searchMovie();\n\n    return () => controller.abort();\n  }, [searchedQuery]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ query: form.elements.movieInput.value.trim() });\n    form.reset();\n  };\n\n  return (\n    <>\n      <form onClick={handleSubmit}>\n        <input type=\"text\" name=\"movieInput\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      {searchedMovies !== null && <MoviesList movies={searchedMovies} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["movies","location","useLocation","map","movie","id","title","to","state","from","API_KEY","axios","imageURL","fetchMovies","controllerSignal","params","language","api_key","signal","responce","data","fetchSearchMovie","movieName","query","fetchMovieDetails","movieId","fetchMovieReviews","fetchMovieCredits","useState","searchedMovies","setSearchedMovies","useSearchParams","searchParams","setSearchParams","searchedQuery","get","useEffect","controller","AbortController","searchMovie","abort","results","onClick","e","preventDefault","form","currentTarget","elements","movieInput","value","trim","reset","type","name"],"sourceRoot":""}